mixin column(param = {})
  div(id=param.id, class=param.class, style=Object.assign({
    'display': 'flex',
    'flex-direction': 'column',
    'gap': param.gap || 'unset',
    'align-items': param.alignItems || 'unset',
  }, param.style || {}))
    block

mixin row(param = {})
  div(id=param.id, class=param.class, style=Object.assign({
    'display': 'flex',
    'flex-direction': 'row',
    'gap': param.gap || 'unset',
  }, param.style || {}))
    block

mixin row-stretch(param = {})
  - const id = 'r' + Math.random().toString(36).slice(2)
  style.
    ##{id}>* { flex-grow: 1; }
  
  div(id=id, style=Object.assign({
    'display': 'flex',
    'flex-direction': 'row',
    'gap': param.gap || 'unset',
  }, param.style || {}))
    block


style.
  .text_input>label {
    font-size: .9rem;
    font-weight: bold;
    
    margin-left: 8px;
    color: #000;
    transition: color 200ms ease, opacity 200ms ease;
  }

  .text_input>.text_input_content {
    font-size: 1rem;
    width: 100%;

    display: flex;
    flex-direction: column;
  }

  .text_input:has(>.text_input_content>:focus-visible)>label {
    color: #1f64db;
  }

  /* 으악 이게 뭐야 ~~아잇 더러워~~ */
  .text_input:has(>.text_input_content>*:placeholder-shown):not(:has(>.text_input_content>*:focus-visible))>label {
    opacity: 0;
  }
  .text_input>.text_input_content>*:focus-visible::placeholder {
    opacity: 0;
  }
  .text_input_content>textarea {
    margin-top: 8px;
  }

mixin text_input(label, name)
  +column({ class: 'text_input', alignItems: 'start' })
    label(name=name) #{label}
    .text_input_content
      block
